//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AutoTheVoice.WS_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WS_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DanhSachCanRenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDangRenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDaRenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DanhSachAPIOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_Service() {
            this.Url = global::AutoTheVoice.Properties.Settings.Default.AutoTheVoice_WS_Service_WS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DanhSachCanRenderCompletedEventHandler DanhSachCanRenderCompleted;
        
        /// <remarks/>
        public event UpdateDangRenderCompletedEventHandler UpdateDangRenderCompleted;
        
        /// <remarks/>
        public event UpdateDaRenderCompletedEventHandler UpdateDaRenderCompleted;
        
        /// <remarks/>
        public event DanhSachAPICompletedEventHandler DanhSachAPICompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DanhSachCanRender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable DanhSachCanRender() {
            object[] results = this.Invoke("DanhSachCanRender", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void DanhSachCanRenderAsync() {
            this.DanhSachCanRenderAsync(null);
        }
        
        /// <remarks/>
        public void DanhSachCanRenderAsync(object userState) {
            if ((this.DanhSachCanRenderOperationCompleted == null)) {
                this.DanhSachCanRenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDanhSachCanRenderOperationCompleted);
            }
            this.InvokeAsync("DanhSachCanRender", new object[0], this.DanhSachCanRenderOperationCompleted, userState);
        }
        
        private void OnDanhSachCanRenderOperationCompleted(object arg) {
            if ((this.DanhSachCanRenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DanhSachCanRenderCompleted(this, new DanhSachCanRenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDangRender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDangRender(System.Guid IDBaiViet) {
            this.Invoke("UpdateDangRender", new object[] {
                        IDBaiViet});
        }
        
        /// <remarks/>
        public void UpdateDangRenderAsync(System.Guid IDBaiViet) {
            this.UpdateDangRenderAsync(IDBaiViet, null);
        }
        
        /// <remarks/>
        public void UpdateDangRenderAsync(System.Guid IDBaiViet, object userState) {
            if ((this.UpdateDangRenderOperationCompleted == null)) {
                this.UpdateDangRenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDangRenderOperationCompleted);
            }
            this.InvokeAsync("UpdateDangRender", new object[] {
                        IDBaiViet}, this.UpdateDangRenderOperationCompleted, userState);
        }
        
        private void OnUpdateDangRenderOperationCompleted(object arg) {
            if ((this.UpdateDangRenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDangRenderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDaRender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDaRender(System.Guid IDBaiViet, string linkvoice) {
            this.Invoke("UpdateDaRender", new object[] {
                        IDBaiViet,
                        linkvoice});
        }
        
        /// <remarks/>
        public void UpdateDaRenderAsync(System.Guid IDBaiViet, string linkvoice) {
            this.UpdateDaRenderAsync(IDBaiViet, linkvoice, null);
        }
        
        /// <remarks/>
        public void UpdateDaRenderAsync(System.Guid IDBaiViet, string linkvoice, object userState) {
            if ((this.UpdateDaRenderOperationCompleted == null)) {
                this.UpdateDaRenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDaRenderOperationCompleted);
            }
            this.InvokeAsync("UpdateDaRender", new object[] {
                        IDBaiViet,
                        linkvoice}, this.UpdateDaRenderOperationCompleted, userState);
        }
        
        private void OnUpdateDaRenderOperationCompleted(object arg) {
            if ((this.UpdateDaRenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDaRenderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DanhSachAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable DanhSachAPI() {
            object[] results = this.Invoke("DanhSachAPI", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void DanhSachAPIAsync() {
            this.DanhSachAPIAsync(null);
        }
        
        /// <remarks/>
        public void DanhSachAPIAsync(object userState) {
            if ((this.DanhSachAPIOperationCompleted == null)) {
                this.DanhSachAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDanhSachAPIOperationCompleted);
            }
            this.InvokeAsync("DanhSachAPI", new object[0], this.DanhSachAPIOperationCompleted, userState);
        }
        
        private void OnDanhSachAPIOperationCompleted(object arg) {
            if ((this.DanhSachAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DanhSachAPICompleted(this, new DanhSachAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DanhSachCanRenderCompletedEventHandler(object sender, DanhSachCanRenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DanhSachCanRenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DanhSachCanRenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDangRenderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDaRenderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DanhSachAPICompletedEventHandler(object sender, DanhSachAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DanhSachAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DanhSachAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591